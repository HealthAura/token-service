{
 "Resources": {
  "TokenSigningKeyBF1D9E0A": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "Description": "KMS Key for signing JWT tokens",
    "EnableKeyRotation": true,
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::713881787612:root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "LambdaStack/TokenSigningKey/Resource"
   }
  },
  "LambdaExecutionRoleD5C26073": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/LambdaExecutionRole/Resource"
   }
  },
  "LambdaExecutionRoleDefaultPolicy6D69732F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "TokenSigningKeyBF1D9E0A",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey*",
        "kms:ReEncrypt*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "DynamoDBStack:ExportsOutputFnGetAttTokenTableKeyD73CBD3FArnC8F4659E"
       }
      },
      {
       "Action": "dynamodb:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "DynamoDBStack:ExportsOutputFnGetAttTokenTable3625D248ArnC9157255"
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaExecutionRoleDefaultPolicy6D69732F",
    "Roles": [
     {
      "Ref": "LambdaExecutionRoleD5C26073"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/LambdaExecutionRole/DefaultPolicy/Resource"
   }
  },
  "TokenServiceSecurityGroup7CB218C8": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function LambdaStackTokenService55FF4E7A",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": "vpc-06157f5d2b53bc3d5"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/TokenService/SecurityGroup/Resource"
   }
  },
  "TokenServiceCC27B309": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Select": [
       0,
       {
        "Fn::Split": [
         "/",
         {
          "Fn::Select": [
           5,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::ImportValue": "healthaura-dev-LambdaFunctionsBucketArn"
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     },
     "S3Key": "deployment.zip"
    },
    "Environment": {
     "Variables": {
      "TOKEN_SERVICE_DYNAMO_TABLE_NAME": {
       "Fn::ImportValue": "DynamoDBStack:ExportsOutputRefTokenTable3625D248A47BF86E"
      },
      "TOKEN_SERVICE_ISSUER": "healthaura",
      "TOKEN_SERVICE_SIGNING_KEY_ARN": "todo"
     }
    },
    "Handler": "bootstrap",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "LambdaExecutionRoleD5C26073",
      "Arn"
     ]
    },
    "Runtime": "provided.al2",
    "Timeout": 30,
    "TracingConfig": {
     "Mode": "Active"
    },
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "TokenServiceSecurityGroup7CB218C8",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      "subnet-0298b196a9e7e8bbf",
      "subnet-07ff424bfd1be15f7",
      "subnet-07ed6169495da80ff"
     ]
    }
   },
   "DependsOn": [
    "LambdaExecutionRoleDefaultPolicy6D69732F",
    "LambdaExecutionRoleD5C26073"
   ],
   "Metadata": {
    "aws:cdk:path": "LambdaStack/TokenService/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WNSwrCMBRF1+I8faUfdAGCDjpQ2gXIaxrl2SYp+VBKyN6lqQ4c3cs5F24JxamC+oCLzfgwZhP1EDqHfGS42EcYpYXQiJWdn6oRa2SEEkKrJ7GRlHc9EU+DvUU2oewHhHDxijvSanO/HpngJYROcG/IrVej/bz5PxAja4XV3vB0c/Nu9i4dfmlkL11AWUGdD2gWUjkaeawPb0uUGa8cSQHtnh8zL1yu4wAAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "LambdaStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "TokenServiceSigningKeyARN": {
   "Value": {
    "Fn::GetAtt": [
     "TokenSigningKeyBF1D9E0A",
     "Arn"
    ]
   },
   "Export": {
    "Name": "healthaura-dev-TokenServiceSigningKeyARN"
   }
  },
  "ExportsOutputFnGetAttTokenServiceCC27B309Arn946B51F4": {
   "Value": {
    "Fn::GetAtt": [
     "TokenServiceCC27B309",
     "Arn"
    ]
   },
   "Export": {
    "Name": "LambdaStack:ExportsOutputFnGetAttTokenServiceCC27B309Arn946B51F4"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}