openapi: 3.0.0
info:
  title: proto/v1/token-service.proto
  version: v1
tags:
  - name: TokenService
paths:
  /v1/generate:
    post:
      summary: Generate creates a new access token and refresh token based on the
        provided claims and DPoP proof.
      operationId: TokenService_Generate
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenserviceGenerateResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tokenserviceGenerateRequest"
        description: >-
          GenerateRequest is the request message for the Generate RPC.

          It includes the claims and DPoP proof required to generate a new token.
        required: true
      tags:
        - TokenService
  /v1/generate-nonce:
    post:
      summary: GenerateNonce creates a new nonce based on the provided claims.
      operationId: TokenService_GenerateNonce
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenserviceGenerateNonceResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tokenserviceGenerateNonceRequest"
        description: |-
          GenerateNonceRequest is the request message for the GenerateNonce RPC.
          It includes the claims required to generate a new nonce.
        required: true
      tags:
        - TokenService
  /v1/refresh:
    post:
      summary: Refresh generates a new access token and refresh token using the
        provided refresh token and DPoP proof.
      operationId: TokenService_Refresh
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenserviceRefreshResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tokenserviceRefreshRequest"
        description: >-
          RefreshRequest is the request message for the Refresh RPC.

          It includes the refresh token and DPoP proof required to generate a new token.
        required: true
      tags:
        - TokenService
components:
  schemas:
    protobufAny:
      type: object
      properties:
        "@type":
          type: string
      additionalProperties: {}
    protobufNullValue:
      type: string
      enum:
        - NULL_VALUE
      default: NULL_VALUE
      description: >-
        `NullValue` is a singleton enumeration to represent the null value for
        the

        `Value` type union.


        The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: "#/components/schemas/protobufAny"
    tokenserviceClaims:
      type: object
      properties:
        iss:
          type: string
          description: The issuer of the token.
        sub:
          type: string
          description: The subject of the token.
        aud:
          type: string
          description: The audience of the token.
        jti:
          type: string
          description: The unique identifier for the token.
        scopes:
          type: array
          items:
            type: string
          description: The scopes included in the token.
        custom_claims:
          type: object
          additionalProperties: {}
          description: Custom claims included in the token.
      description: |-
        Claims represents the claims to be included in a token or nonce.
        It includes standard JWT claims and custom claims.
    tokenserviceDPoP:
      type: object
      properties:
        proof:
          type: string
          description: The DPoP proof.
        ttl_minutes:
          type: string
          format: int64
          description: The time-to-live of the DPoP proof in minutes.
        want_claims:
          $ref: "#/components/schemas/tokenserviceDPoPClaims"
      description: DPoP represents the DPoP proof required for token operations.
    tokenserviceDPoPClaims:
      type: object
      properties:
        htm:
          type: string
          description: The HTTP method of the request.
        htu:
          type: string
          description: The HTTP URI of the request.
        rh:
          type: string
          description: The request body hash.
      description: DPoPClaims represents the claims included in a DPoP proof.
    tokenserviceGenerateNonceRequest:
      type: object
      properties:
        claims:
          $ref: "#/components/schemas/tokenserviceClaims"
        nonce_ttl:
          type: string
          format: int64
          description: The time-to-live of the nonce in minutes.
      description: |-
        GenerateNonceRequest is the request message for the GenerateNonce RPC.
        It includes the claims required to generate a new nonce.
    tokenserviceGenerateNonceResponse:
      type: object
      properties:
        nonce:
          type: string
          description: The generated nonce.
        expires_in:
          type: string
          format: int64
          description: The expiration time of the nonce in seconds.
      description: |-
        GenerateNonceResponse is the response message for the GenerateNonce RPC.
        It includes the generated nonce and the expiration time.
    tokenserviceGenerateRequest:
      type: object
      properties:
        claims:
          $ref: "#/components/schemas/tokenserviceClaims"
        access_token_ttl:
          type: string
          format: int64
          description: The time-to-live of the access token in minutes.
        refresh_token_ttl:
          type: string
          format: int64
          description: The time-to-live of the refresh token in minutes.
        dpop:
          $ref: "#/components/schemas/tokenserviceDPoP"
      description: |-
        GenerateRequest is the request message for the Generate RPC.
        It includes the claims and DPoP proof required to generate a new token.
    tokenserviceGenerateResponse:
      type: object
      properties:
        access_token:
          type: string
          description: The generated access token.
        refresh_token:
          type: string
          description: The generated refresh token.
        access_token_expiry:
          type: string
          format: int64
          description: The expiration time of the access token in seconds.
        refresh_token_expiry:
          type: string
          format: int64
          description: The expiration time of the refresh token in seconds.
      description: >-
        GenerateResponse is the response message for the Generate RPC.

        It includes the generated access token, refresh token, and the expiration time.
    tokenserviceRefreshRequest:
      type: object
      properties:
        refresh_token:
          type: string
          description: The refresh token used to generate a new access token.
        access_token_ttl:
          type: string
          format: int64
          description: The time-to-live of the access token in minutes.
        refresh_token_ttl:
          type: string
          format: int64
          description: The time-to-live of the refresh token in minutes.
        refresh_dpop:
          $ref: "#/components/schemas/tokenserviceDPoP"
        new_token_dpop:
          $ref: "#/components/schemas/tokenserviceDPoP"
        required_scopes:
          type: array
          items:
            type: string
      description: >-
        RefreshRequest is the request message for the Refresh RPC.

        It includes the refresh token and DPoP proof required to generate a new token.
    tokenserviceRefreshResponse:
      type: object
      properties:
        access_token:
          type: string
          description: The new access token.
        refresh_token:
          type: string
          description: The new refresh token.
        access_token_expiry:
          type: string
          format: int64
          description: The expiration time of the access token in seconds.
        refresh_token_expiry:
          type: string
          format: int64
          description: The expiration time of the refresh token in seconds.
      description: >-
        RefreshResponse is the response message for the Refresh RPC.

        It includes the new access token, refresh token, and the expiration time.
